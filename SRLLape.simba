function iAbs(i: Integer): Integer;
begin
  if (i < 0) then
    Result := -i
  else
    Result := i;
end;

function GetTextAtExWrap(const xs, ys, xe, ye, minvspacing, maxvspacing, hspacing, color, tol: Integer; const font: string): string;
begin
  Result := GetTextAtEx(xs, ys, xe, ye, minvspacing, maxvspacing, hspacing, color, tol, font);
end;

function InitializeHTTPClientWrap(HandleCookies: Boolean): Integer;
begin
  Result := InitializeHTTPClient(HandleCookies);
end;

function ThreadSafeCall(s: string; params: TVariantArray): Variant;
begin
  WriteLn('Calling proc ', s, ' thread safe (not supported in Lape)');
  Result := NULL;
end;

function CallProc(s: string; params: TVariantArray): Variant;
begin
  WriteLn('Calling proc ', s, ' (not supported in Lape)');
  Result := NULL;
end;

function GetMufasaBitmap(bmp: Integer): Integer;
begin
  Result := bmp;
end;

function ExceptionType: TIFException;
begin
  WriteLn('ExceptionType is not supported in Lape');
  Result := erCustomError;
end;

function ExceptionParam: string;
begin
  WriteLn('ExceptionParam is not supported in Lape');
  Result := '';
end;

const
  clWhite = 16777215;
  clBlack = 0;
  clBlue  = 16711680;
  clRed   = 255;
  clPurple= 8388736;

{$define Simba}
{$include SRL/SRL.simba}
