procedure DebugLn(s: string);
begin
end;

procedure Swap(var a, b);
begin
end;

function GetSystemTime: UInt32;
begin
  Result := GetTickCount;
end;

function iAbs(i: Integer): Integer;
begin
  Result := Abs(i);
end;

function Chr(c: Byte): Char; overload;
begin
  Result := Char(c);
end;

function Chr(c: Word): WideChar; overload;
begin
  Result := WideChar(c);
end;

function GetTextAtExWrap(const xs, ys, xe, ye, minvspacing, maxvspacing, hspacing, color, tol: Integer; const font: string): string;
begin
  Result := GetTextAtEx(xs, ys, xe, ye, minvspacing, maxvspacing, hspacing, color, tol, font);
end;

function InitializeHTTPClientWrap(HandleCookies: Boolean): Integer;
begin
  Result := InitializeHTTPClient(HandleCookies);
end;

const
  clWhite = 255 * 255 * 255;
  clBlack = 0;
  clBlue  = 255 shl 16;
  clRed   = 255;
  clPurple= clBlue + 100;

  CharsNPC = 'CharsNPC';
  UpChars = 'UpChars';
  SmallChars = 'SmallChars';
  StatChars = 'StatChars';
  FriendChars = 'FriendChars';

{$define Simba}
{$include SRL/SRL.simba}