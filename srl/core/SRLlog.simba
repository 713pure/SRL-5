(*

SRL Debug Log
=============

Routines that write to the SRL log file.

*)

var
  SRL_SavePath: string;        // the path to save log files
  SRL_LogFile: integer;        // stores the log file
  SRL_StartTime: string;       // the time the script starts (used to name log file)
  SRL_DisableLogging: boolean; // gives the scripter the option to disable
  SRL_LogInitialized: boolean; // so disabling will work properly; set if file was created successfully

(*
TakeScreen
~~~~~~~~~~

.. code-block:: pascal

    procedure TakeScreen(Reason: string);

Sets up Box variables

.. note::

    by Mutant, Squirrle, Yakman, & Harry
    Last Modified: Feb. 16th, 2012 by Coh3n

Example:

.. code-block:: pascal

  TakeScreen('Prison Pete');

*)
procedure TakeScreen(Reason: string);
begin
  ForceDirectories(SRL_SavePath);

  try
    if FileExists(SRL_SavePath + reason + ' ' + Players[CurrentPlayer].Name + '.bmp') then
      SaveScreenshot(SRL_SavePath + reason + ' ' + Players[CurrentPlayer].Name + ' ' + TimeRunning + '.bmp')
    else
      SaveScreenshot(SRL_SavePath + reason + ' ' + Players[CurrentPlayer].Name + '.bmp');

    WriteLn('Screenshot of: ' + reason + ' ' + TimeRunning);
  except
    Writeln('Failed to save screenshot of: ' + reason);
  end
end;

(*
InitializeSRLLogFile
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure InitializeSRLLogFile();

Creates the SRL log file.

.. note::

    by Coh3n
    Last Modified: Feb. 17th, 2012 by Coh3n

Example:

.. code-block:: pascal

  InitializeSRLLogFile();

*)
procedure InitializeSRLLogFile();
var
  fileName: string;
begin
  if (SRL_DisableLogging) then
    exit;

  forceDirectories(SRL_SavePath);

  // make sure it's a valid file name (Windows)
  fileName := 'SRL log ('+theDate(DATE_MONTH)+' at '+SRL_StartTime+').txt';
  fileName := replace(fileName, '/', '-');
  fileName := replace(fileName, ':', ' ');
  fileName := SRL_SavePath + fileName;

  try
    if (fileExists(fileName)) then
      SRL_LogFile := openFile(fileName, false)
    else
      createFile(fileName);
  except
    writeln('InitializeSRLLogFile: '+exceptionToString(exceptionType, exceptionParam));
  end;

  SRL_LogInitialized := true;
end;

(*
AddToSRLLog
~~~~~~~~~~~

.. code-block:: pascal

    procedure AddToSRLLog(s : string);

Writes the string 's' to the SRL log file.

.. note::

    by Markus
    Last Modified: Feb. 17th, 2012 by Coh3n

Example:

.. code-block:: pascal

  AddToSRLLoc('Adding to SRL log file!');

*)
procedure AddToSRLLog(s: string);
begin
  writeln(s);

  if (SRL_DisableLogging) then
    exit;

  if (not SRL_LogInitialized) then
    InitializeSRLLogFile();

  if (SRL_LogFile >= 0) then
  begin
    try
      writeFileString(SRL_LogFile, '['+msToTime(getTimeRunning(), TIME_BARE)+']: '+s+#13+#10);
    except
      SRL_Warn('AddToSRLLog', 'Could not write to logfile: '+exceptionToString(exceptionType, exceptionParam), WARN_ALLVERSIONS);
    end;
  end;
end;

(*
FreeSRLLog
~~~~~~~~~~

.. code-block:: pascal

    procedure FreeSRLLog;

Frees the opened SRL log file.

.. note::

    by Raymond

Example:

.. code-block:: pascal

  freeSRLLog();

*)
procedure FreeSRLLog;
begin
  try
    if (SRL_LogFile >= 0) then
      closeFile(SRL_LogFile);
  except
  end;
end;
