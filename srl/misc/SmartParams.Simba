Function GetSmartParams: TStringArray;
var
  Params: TStringArray;
  Page: String;
begin
  Page := Between('<iframe id="game" src="', '"', GetPage('http://www.runescape.com/game.ws?j=1'));
  Params := Explode(',', Page);
  Result := Params;
end;

Procedure FixSmartSpeed;
var
  T: Integer;
begin
  T:= GetSystemTime + 2000;
  While (Not SmartEnabled) Do
  begin
    if (GetSystemTime >= T) Then
      Break;
    Wait(500);
  end;

  While (GetColor(382, 252) = 0) Do
  begin
    SmartSetRefresh(SmartGetRefresh + 1);
    MMouse(4, 4, 0, 0);
    SmartSetRefresh(SmartGetRefresh - 1);
    if (GetSystemTime >= T) Then
      Break;
    Wait(500);
  end;
end;

{$IFDEF SMARTREMOTE}
Function SmartGetClientIDs: TIntegerArray;
var
  I, Count: Integer;
begin
  Count:= SmartGetClients(FALSE);
  If (Count > 0) then
  begin
    SetLength(Result, 1);
    For I:= 0 To (Count - 1) Do
      Result[I]:= SmartClientID(I);
  end;
end;

Procedure SmartKillClients;
var
  I: Integer;
  IDs: TIntegerArray;
begin
  IDs:= SmartGetClientIDs;
  For I:= High(IDs) DownTo 0 Do
  begin
    if SmartKillClient(IDs[I]) then
      Writeln('Killed Client: ' + IntToStr(IDs[I]))
    else
      Writeln('Failed To Kill Client: ' + IntToStr(IDs[I]));
  end;
end;

function InitSmart(ForceNew: boolean): integer;
var
  I, Count: Integer;
  Params: TStringArray;
begin
  if (Not ForceNew) then
  begin
    Count:= SmartGetClients(True);
    If (Count > 0) then
    begin
      For I:= 0 to Count-1 do
      begin
        Result:= SmartClientID(I);
        if SmartPairClient(Result) then
        begin
          SetEIOSTarget('libsmartremote', IntToStr(result));
          Exit;
        end;
      end;
    end;
  end;
  Params:= GetSmartParams;
  If (Length(Params) < 2) then
  begin
    Writeln('*** Failed To Grab Smart Parameters ***');
    TerminateScript;
    Exit;
  end;

  Result:= SmartSpawnClient('./Plugins/', Params[0], ',' + Params[1], 765, 503, 's', '', '', -1);
  If (Result > 0) then
  begin
    try
      SetEIOSTarget('LibSmartRemote', IntToStr(Result));
    except
      Writeln('*** Fatal Error: Pairing Clients; Attempting To Kill All Clients ***');
      SmartKillClients;
      TerminateScript;
    end;
  end else
    begin
      Writeln('*** Smart Cannot Spawn Clients ***');
      TerminateScript;
    end;
end;

Procedure SetupSmart(ForceNewClient: Boolean);
var
  ID, T: Integer;
begin
  T:= GetSystemTime + 120000;
  ID:= InitSmart(ForceNewClient);
  if (ID <= 0) then
  begin
    writeln('*** Smart Failed To Load ***');
    TerminateScript;
  end else
    writeln('Please Wait.. Smart Is Currently Loading..');

  While (GetColor(382, 252) <> 0) Do
  begin
    if RSReady then
      break;
    Wait(100);
    if (GetTimeRunning >= 120000) then
    begin
      Writeln('*** Failed To Detect Clients ***');
      TerminateScript;
    end;
  end;
end;
{$ENDIF}
{$IFDEF SMART}
const
  SmartFileLocation = 'SmartWorlds.INI';

Function Convert24Hours(Time: TStringArray): TStringArray;
var
  Value: Integer;
begin
  If (Not ExecRegExpr('AM|am', Time[2])) then
  begin
    Value:= StrToInt(Time[0]);
    IncEx(Value, 12);
    Time[0]:= IntToStr(Value);
  end;

  Result:= Time;
end;

Function ParamsOutdated(World: String): Boolean;
var
  CurrentTime, LastWritten: String;
  DateTimeData, OldTime, NewTime: TStringArray;
begin
  Result:= False;
  LastWritten:= ReadINI('DateTime', 'Date' + World, SmartFileLocation);
  if (Length(LastWritten) < 1) then
  begin
    Result:= True;
    Exit;
  end;

  DateTimeData:= Explode('-', LastWritten);

  if (DateTimeData[0] <> TheDate(Date_Month)) then
  begin
    CurrentTime:= TheTime;
    OldTime:= Convert24Hours(Explode(':', DateTimeData[1]));
    NewTime:= Convert24Hours(Explode(':', CurrentTime));

    Result:= (Abs((StrToInt(NewTime[0]) - StrToInt(OldTime[0]))) >= 6);
    Exit;
  end else
    Result:= False;
end;

Function SaveNewParams: TStringArray;
var
  P1, P2: Integer;
  Params: TStringArray;
  World: String;
begin
  Params:= GetSmartParams;
  P1:= Pos('world.', Params[0]);
  P2:= PosEx('.runescape', Params[0], P1 + 1);
  World:= Copy(Params[0], P1 + 13, P2 - (P1 + 13));

  writeln('Params Grabbed: ' + ToStr(Params));

  If ParamsOutdated(World) Then
  begin
    WriteINI('World', 'Server' + World,  Params[1], SmartFileLocation);
    WriteINI('DateTime', 'Date' + World, TheDate(Date_Month) + '-' + TheTime, SmartFileLocation);
  end;

  Result:= Params;
end;

Function GetSmartFileParams(Server: Integer): TStringArray;
var
  World: String;
begin
  World:= IntToStr(Server);
  If ParamsOutdated(World) then
  begin
    Result:= SaveNewParams;
    Exit;
  end;

  World:= ReadINI('World', 'Server' + World, SmartFileLocation);
  If (Length(World) > 0) then
  begin
    SetLength(Result, 2);
    Result[0]:= 'http://world' + IntToStr(Server) + '.runescape.com/';
    Result[1]:= World;
  end;
end;

Function GetAnyValidParams(Server: String): TStringArray;
var
  I: Integer;
begin
  if (ParamsOutdated(Server)) then
  begin
    For I:= 1 To 138 Do
      If (Not ParamsOutdated(IntToStr(I))) then
      begin
        SetLength(Result, 2);
        Result[0]:= 'http://world' + IntToStr(I) + '.runescape.com/';
        Result[1]:= ReadINI('World', 'Server' + IntToStr(I), SmartFileLocation);
        Break;
      end;
  end else
    begin
      SetLength(Result, 2);
      Result[0]:= 'http://world' + Server + '.runescape.com/';
      Result[1]:= ReadINI('World', 'Server' + Server, SmartFileLocation);
    end;
end;

Procedure SetupSmartX(Server: Integer; AnyParams: Boolean);
var
  Params: TStringArray;
begin
  Params:= GetSmartFileParams(Server);
  If AnyParams then
    Params:= GetAnyValidParams(IntToStr(Server));

  writeln('Params Used: ' + ToStr(Params));
  SmartSetup(Params[0], 'l=2/,' + Params[1], 765, 503, 's');
end;
{$ENDIF}

